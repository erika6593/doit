@require_http_methods(["POST"])
def send_share_email(request):
    if request.method == 'POST':
        recipient_email = request.POST.get('email')
        page_url = request.POST.get('page_url')
        subject = '心理テストが共有されました！'
        sender_email = recipient_email# 送信者のメールアドレス

        # full_page_url = f'{settings.BASE_URL}{page_url}'
        page_url = reverse('psychology_tests:quiz_detail', kwargs={'pk': 4})
        full_page_url = request.build_absolute_uri(page_url)

        message = f"以下のリンクから心理テストを確認できます。アカウント登録がまだの方は新規ユーザー登録をお願いします！: {full_page_url}"
        # message = f"以下のリンクから心理テストを確認できます: {page_url}"
        # sender_email = 'your-email@gmail.com'  # 送信者のメールアドレス


        send_mail(subject, message, sender_email, [recipient_email])

        # リンクを含むメッセージを返す
        return HttpResponse(f"メールが送信されました！<br><br>"
                            f"<a href='{settings.LINK_URL_1}'>心理テスト一覧に戻る</a>")
        # return HttpResponse("""
        #     メールが送信されました！<br><br>
        #     <a href="http://127.0.0.1:8000/psychology_tests/quizzes/quiz_list/">心理テスト一覧に戻る</a>
        # """)
    else:
        return HttpResponse("アドレスを間違えています。")



{% extends 'base.html' %}
{% load static %}

{% block head %}
    <link rel="stylesheet" href="{% static 'css/test.css' %}?v=1.5" type="text/css">
{% endblock %}

{% block title %}{{ quiz.title }}{% endblock %}

{% block content %}
<div class="quiz-container">
    <h1>{{ quiz.title }}</h1>
    <div class="quiz-images">
        {% for picture in pictures %}
        <img src="{{ picture.picture.url }}" alt="Product Image {{ forloop.counter }}" class="product-image uniform-size">
        {% endfor %}
    </div>
    <p class="question label">目の前に一瞬で地球を爆発できる危険なスイッチがあります。どんなデザインですか？直感で１つ選んでください😊</p>
    <div class="choices label">
        <ol>
            <li>赤色の丸形の押しボタン</li>
            <li>青色の四角形の押しボタン</li>
            <li>縦に３つ並んでいるカラフルなスイッチ</li>
            <li>四角い真っ黒なスイッチ</li>
        </ol>
    </div>
    <div class="results label">
        <p>▼診断結果▼</p>
        <ol><br>
            <li>サイコパス傾向はほとんどありません。通常の健全な思考回路を持っている証拠です。</li>
            <li>サイコパスレベルがかなり高いです。あなたは良心が欠如してる可能性が高いです。</li>
            <li>サイコパスの気質があるかもしれません。ときどき周囲の人たちが引いてしまうような言動や行動を取ってしまうことがあるようです。</li>
            <li>少しサイコパス的な特徴があるようですが、安心してください。基本的には一般的な人と同じような感性を持っています。</li>
        </ol><br>
        <p>結果はいかがでしたか？</p>
        <p>この内容を共有したい時は送信先を入力してね😘</p>
    </div>
    <form action="{% url 'psychology_tests:send_share_email' %}" method="post" class="share-form">
    {% csrf_token %}
    <input type="hidden" name="email" value="{{ recipient_email }}">
    <input type="hidden" name="page_url" value="{{ request.build_absolute_uri }}">
    <input type="hidden" name="quiz_id" value="{{ quiz.id }}">
    <div class="email-container custom-email-form label">
        <label for="email">メールアドレス:</label>
        <input type="email" id="email" name="email" required style="width: 50%;">
        <button type="submit" class="button" onclick="return confirm('送信しますか?');">送信</button>
    </div>
</form>
</div>
{% endblock %}



from pathlib import Path
import os
import logging
from django.utils import timezone

logger = logging.getLogger('usage')


BASE_DIR = Path(__file__).resolve().parent.parent
# BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
TEMPLATE_DIR = os.path.join(BASE_DIR, 'templates', )
STATIC_DIR = os.path.join(BASE_DIR, 'static')



# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure--b)k5wxa(5l-x#vvfmxcmlzs9i23&#nwrzx*+affy)zl_+f#)4'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['sentia.pythonanywhere.com', '127.0.0.1']


# Application definition

INSTALLED_APPS = [
    'accounts',
    'psychology_tests',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

]

AUTH_USER_MODEL = 'accounts.Users'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]


ROOT_URLCONF = 'psychology_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATE_DIR],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'psychology_project.wsgi.application'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': 'usage.log',
        },
    },
    'loggers': {
        'usage': {
            'handlers': ['file'],
            'level': 'DEBUG',
            'propagate': False,
        },
    },
}


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'ja'

TIME_ZONE = 'Asia/Tokyo'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    STATIC_DIR
]
# STATIC_URL = '/static/'
# STATICFILES_DIRS = [
#     BASE_DIR / 'static'
# ]

LOGIN_URL = '/accounts/user_login'
LOGIN_REDIRECT_URL = '/psychology_tests/quiz_list'
LOGOUT_REDIRECT_URL = '/accounts/user_login'

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'



# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'info.psycho2024@gmail.com'
EMAIL_HOST_PASSWORD = 'yhiumkikyvsabhhx'





# EMAIL_HOST_USER = 'e0429ri@gmail.com'
# EMAIL_HOST_PASSWORD = 'ocjgolsdiuyeitpu'


# BASE_URL = os.getenv('BASE_URL', 'http://127.0.0.1:8000')

# # settings/production.py
# BASE_URL = 'https://sentia.pythonanywhere.com'

# # settings/development.py
# BASE_URL = 'http://127.0.0.1:8000'

# 遷移先指定
# DEBUG = bool(os.environ.get('DEBUG', False))

if DEBUG:
    BASE_URL = 'http://127.0.0.1:8000'
else:
    BASE_URL = 'https://sentia.pythonanywhere.com'

# BASE_URLが"http://"または"https://"で始まらない場合はそれを追加
if not BASE_URL.startswith('http://') and not BASE_URL.startswith('https://'):
    BASE_URL = 'http://' + BASE_URL  # or 'https://' depending on your needs

# メール内のリンク1
LINK_URL_1 = f'{BASE_URL}/psychology_tests/quizzes/quiz_list/'

# もう一つのリンクの設定
LINK_URL_2 = f'{BASE_URL}/accounts/user/'
